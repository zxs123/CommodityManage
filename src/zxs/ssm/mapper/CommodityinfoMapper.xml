<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="zxs.ssm.mapper.CommodityinfoMapper" >
  <resultMap id="BaseResultMap" type="zxs.ssm.po.Commodityinfo" >
    <id column="commodityId" property="commodityid" jdbcType="INTEGER" />
    <result column="commodityName" property="commodityname" jdbcType="VARCHAR" />
    <result column="commodityType" property="commoditytype" jdbcType="VARCHAR" />
    <result column="commodityScale" property="commodityscale" jdbcType="VARCHAR" />
    <result column="commodityMarque" property="commoditymarque" jdbcType="VARCHAR" />
    <result column="commodityUnit" property="commodityunit" jdbcType="VARCHAR" />
    <result column="qiyong" property="qiyong" jdbcType="INTEGER" />
    <result column="inventoryNum" property="inventorynum" jdbcType="INTEGER" />
    <result column="zt" property="zt" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    commodityId, commodityName, commodityType, commodityScale, commodityMarque, commodityUnit, 
    qiyong, inventoryNum, zt
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="zxs.ssm.po.CommodityinfoExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from commodityinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from commodityinfo
    where commodityId = #{commodityid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from commodityinfo
    where commodityId = #{commodityid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="zxs.ssm.po.CommodityinfoExample" >
    delete from commodityinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="zxs.ssm.po.Commodityinfo" >
    insert into commodityinfo (commodityId, commodityName, commodityType, 
      commodityScale, commodityMarque, commodityUnit, 
      qiyong, inventoryNum, zt
      )
    values (#{commodityid,jdbcType=INTEGER}, #{commodityname,jdbcType=VARCHAR}, #{commoditytype,jdbcType=VARCHAR}, 
      #{commodityscale,jdbcType=VARCHAR}, #{commoditymarque,jdbcType=VARCHAR}, #{commodityunit,jdbcType=VARCHAR}, 
      #{qiyong,jdbcType=INTEGER}, #{inventorynum,jdbcType=INTEGER}, #{zt,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="zxs.ssm.po.Commodityinfo" >
    insert into commodityinfo
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="commodityid != null" >
        commodityId,
      </if>
      <if test="commodityname != null" >
        commodityName,
      </if>
      <if test="commoditytype != null" >
        commodityType,
      </if>
      <if test="commodityscale != null" >
        commodityScale,
      </if>
      <if test="commoditymarque != null" >
        commodityMarque,
      </if>
      <if test="commodityunit != null" >
        commodityUnit,
      </if>
      <if test="qiyong != null" >
        qiyong,
      </if>
      <if test="inventorynum != null" >
        inventoryNum,
      </if>
      <if test="zt != null" >
        zt,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="commodityid != null" >
        #{commodityid,jdbcType=INTEGER},
      </if>
      <if test="commodityname != null" >
        #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="commoditytype != null" >
        #{commoditytype,jdbcType=VARCHAR},
      </if>
      <if test="commodityscale != null" >
        #{commodityscale,jdbcType=VARCHAR},
      </if>
      <if test="commoditymarque != null" >
        #{commoditymarque,jdbcType=VARCHAR},
      </if>
      <if test="commodityunit != null" >
        #{commodityunit,jdbcType=VARCHAR},
      </if>
      <if test="qiyong != null" >
        #{qiyong,jdbcType=INTEGER},
      </if>
      <if test="inventorynum != null" >
        #{inventorynum,jdbcType=INTEGER},
      </if>
      <if test="zt != null" >
        #{zt,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="zxs.ssm.po.CommodityinfoExample" resultType="java.lang.Integer" >
    select count(*) from commodityinfo
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update commodityinfo
    <set >
      <if test="record.commodityid != null" >
        commodityId = #{record.commodityid,jdbcType=INTEGER},
      </if>
      <if test="record.commodityname != null" >
        commodityName = #{record.commodityname,jdbcType=VARCHAR},
      </if>
      <if test="record.commoditytype != null" >
        commodityType = #{record.commoditytype,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityscale != null" >
        commodityScale = #{record.commodityscale,jdbcType=VARCHAR},
      </if>
      <if test="record.commoditymarque != null" >
        commodityMarque = #{record.commoditymarque,jdbcType=VARCHAR},
      </if>
      <if test="record.commodityunit != null" >
        commodityUnit = #{record.commodityunit,jdbcType=VARCHAR},
      </if>
      <if test="record.qiyong != null" >
        qiyong = #{record.qiyong,jdbcType=INTEGER},
      </if>
      <if test="record.inventorynum != null" >
        inventoryNum = #{record.inventorynum,jdbcType=INTEGER},
      </if>
      <if test="record.zt != null" >
        zt = #{record.zt,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update commodityinfo
    set commodityId = #{record.commodityid,jdbcType=INTEGER},
      commodityName = #{record.commodityname,jdbcType=VARCHAR},
      commodityType = #{record.commoditytype,jdbcType=VARCHAR},
      commodityScale = #{record.commodityscale,jdbcType=VARCHAR},
      commodityMarque = #{record.commoditymarque,jdbcType=VARCHAR},
      commodityUnit = #{record.commodityunit,jdbcType=VARCHAR},
      qiyong = #{record.qiyong,jdbcType=INTEGER},
      inventoryNum = #{record.inventorynum,jdbcType=INTEGER},
      zt = #{record.zt,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="zxs.ssm.po.Commodityinfo" >
    update commodityinfo
    <set >
      <if test="commodityname != null" >
        commodityName = #{commodityname,jdbcType=VARCHAR},
      </if>
      <if test="commoditytype != null" >
        commodityType = #{commoditytype,jdbcType=VARCHAR},
      </if>
      <if test="commodityscale != null" >
        commodityScale = #{commodityscale,jdbcType=VARCHAR},
      </if>
      <if test="commoditymarque != null" >
        commodityMarque = #{commoditymarque,jdbcType=VARCHAR},
      </if>
      <if test="commodityunit != null" >
        commodityUnit = #{commodityunit,jdbcType=VARCHAR},
      </if>
      <if test="qiyong != null" >
        qiyong = #{qiyong,jdbcType=INTEGER},
      </if>
      <if test="inventorynum != null" >
        inventoryNum = #{inventorynum,jdbcType=INTEGER},
      </if>
      <if test="zt != null" >
        zt = #{zt,jdbcType=INTEGER},
      </if>
    </set>
    where commodityId = #{commodityid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zxs.ssm.po.Commodityinfo" >
    update commodityinfo
    set commodityName = #{commodityname,jdbcType=VARCHAR},
      commodityType = #{commoditytype,jdbcType=VARCHAR},
      commodityScale = #{commodityscale,jdbcType=VARCHAR},
      commodityMarque = #{commoditymarque,jdbcType=VARCHAR},
      commodityUnit = #{commodityunit,jdbcType=VARCHAR},
      qiyong = #{qiyong,jdbcType=INTEGER},
      inventoryNum = #{inventorynum,jdbcType=INTEGER},
      zt = #{zt,jdbcType=INTEGER}
    where commodityId = #{commodityid,jdbcType=INTEGER}
  </update>
</mapper>